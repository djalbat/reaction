"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _constants = require("../constants");
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function setAttribute(name, value) {
    if (name === _constants.CLASS_NAME) {
        name = _constants.CLASS;
    }
    if (name === _constants.HTML_FOR) {
        name = _constants.FOR;
    }
    if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === _constants.OBJECT) {
        var _this = this;
        var keys = Object.keys(value);
        keys.forEach(function(key) {
            _this.domElement[name][key] = value[key];
        });
    } else if ((typeof value === "undefined" ? "undefined" : _typeof(value)) === _constants.BOOLEAN) {
        if (value) {
            value = name; ///
            this.domElement.setAttribute(name, value);
        }
    } else {
        this.domElement.setAttribute(name, value);
    }
}
function getAttribute(name) {
    return this.domElement.getAttribute(name);
}
function clearAttribute(name) {
    this.domElement.removeAttribute(name);
}
function addAttribute(name, value) {
    this.setAttribute(name, value);
}
function removeAttribute(name) {
    this.domElement.removeAttribute(name);
}
function hasAttribute(name) {
    return this.domElement.hasAttribute(name);
}
function setClass(className) {
    this.domElement.className = className;
}
function addClass(className) {
    this.domElement.classList.add(className);
}
function removeClass(className) {
    this.domElement.classList.remove(className);
}
function toggleClass(className) {
    this.domElement.classList.toggle(className);
}
function hasClass(className) {
    return this.domElement.classList.contains(className);
}
function hasClasses(classNames) {
    var _this = this;
    return classNames.every(function(className) {
        return _this.hasClass(className);
    });
}
function clearClasses() {
    this.domElement.className = _constants.EMPTY_STRING;
}
function getTagName() {
    return this.domElement.tagName;
}
function getStyle(name) {
    return this.domElement.style[name];
}
function setStyle(name, value) {
    this.domElement.style[name] = value;
}
var _default = {
    setAttribute: setAttribute,
    getAttribute: getAttribute,
    clearAttribute: clearAttribute,
    addAttribute: addAttribute,
    removeAttribute: removeAttribute,
    hasAttribute: hasAttribute,
    setClass: setClass,
    addClass: addClass,
    removeClass: removeClass,
    toggleClass: toggleClass,
    hasClass: hasClass,
    hasClasses: hasClasses,
    clearClasses: clearClasses,
    getTagName: getTagName,
    getStyle: getStyle,
    setStyle: setStyle
};
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvY29udGFpbmVyRWxlbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgRk9SLCBDTEFTUywgT0JKRUNULCBCT09MRUFOLCBDTEFTU19OQU1FLCBIVE1MX0ZPUiwgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHtcbiAgaWYgKG5hbWUgPT09IENMQVNTX05BTUUpIHtcbiAgICBuYW1lID0gQ0xBU1M7XG4gIH1cblxuICBpZiAobmFtZSA9PT0gSFRNTF9GT1IpIHtcbiAgICBuYW1lID0gRk9SO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gT0JKRUNUKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcblxuICAgIGtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICB0aGlzLmRvbUVsZW1lbnRbbmFtZV1ba2V5XSA9IHZhbHVlW2tleV07XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBCT09MRUFOKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IG5hbWU7IC8vL1xuXG4gICAgICB0aGlzLmRvbUVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5kb21FbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0QXR0cmlidXRlKG5hbWUpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7IH1cblxuZnVuY3Rpb24gY2xlYXJBdHRyaWJ1dGUobmFtZSkgeyB0aGlzLmRvbUVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpOyB9XG5cbmZ1bmN0aW9uIGFkZEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkgeyB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7IH1cblxuZnVuY3Rpb24gcmVtb3ZlQXR0cmlidXRlKG5hbWUpIHsgdGhpcy5kb21FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShuYW1lKTsgfVxuXG5mdW5jdGlvbiBoYXNBdHRyaWJ1dGUobmFtZSkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50Lmhhc0F0dHJpYnV0ZShuYW1lKTsgfVxuXG5mdW5jdGlvbiBzZXRDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTsgfVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTsgfVxuXG5mdW5jdGlvbiByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTsgfVxuXG5mdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUpIHsgdGhpcy5kb21FbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lKTsgfVxuXG5mdW5jdGlvbiBoYXNDbGFzcyhjbGFzc05hbWUpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTsgfVxuXG5mdW5jdGlvbiBoYXNDbGFzc2VzKGNsYXNzTmFtZXMpIHsgcmV0dXJuIGNsYXNzTmFtZXMuZXZlcnkoKGNsYXNzTmFtZSkgPT4gdGhpcy5oYXNDbGFzcyhjbGFzc05hbWUpKTsgfVxuXG5mdW5jdGlvbiBjbGVhckNsYXNzZXMoKSB7IHRoaXMuZG9tRWxlbWVudC5jbGFzc05hbWUgPSBFTVBUWV9TVFJJTkc7IH1cblxuZnVuY3Rpb24gZ2V0VGFnTmFtZSgpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC50YWdOYW1lOyB9XG5cbmZ1bmN0aW9uIGdldFN0eWxlKG5hbWUpIHsgcmV0dXJuIHRoaXMuZG9tRWxlbWVudC5zdHlsZVtuYW1lXTsgfVxuXG5mdW5jdGlvbiBzZXRTdHlsZShuYW1lLCB2YWx1ZSkgeyB0aGlzLmRvbUVsZW1lbnQuc3R5bGVbbmFtZV0gPSB2YWx1ZTsgfVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHNldEF0dHJpYnV0ZSxcbiAgZ2V0QXR0cmlidXRlLFxuICBjbGVhckF0dHJpYnV0ZSxcbiAgYWRkQXR0cmlidXRlLFxuICByZW1vdmVBdHRyaWJ1dGUsXG4gIGhhc0F0dHJpYnV0ZSxcbiAgc2V0Q2xhc3MsXG4gIGFkZENsYXNzLFxuICByZW1vdmVDbGFzcyxcbiAgdG9nZ2xlQ2xhc3MsXG4gIGhhc0NsYXNzLFxuICBoYXNDbGFzc2VzLFxuICBjbGVhckNsYXNzZXMsXG4gIGdldFRhZ05hbWUsXG4gIGdldFN0eWxlLFxuICBzZXRTdHlsZVxufTtcbiJdLCJuYW1lcyI6WyJzZXRBdHRyaWJ1dGUiLCJuYW1lIiwidmFsdWUiLCJrZXlzIiwiT2JqZWN0IiwiZm9yRWFjaCIsImtleSIsImRvbUVsZW1lbnQiLCJnZXRBdHRyaWJ1dGUiLCJjbGVhckF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImFkZEF0dHJpYnV0ZSIsImhhc0F0dHJpYnV0ZSIsInNldENsYXNzIiwiY2xhc3NOYW1lIiwiYWRkQ2xhc3MiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmVDbGFzcyIsInJlbW92ZSIsInRvZ2dsZUNsYXNzIiwidG9nZ2xlIiwiaGFzQ2xhc3MiLCJjb250YWlucyIsImhhc0NsYXNzZXMiLCJjbGFzc05hbWVzIiwiZXZlcnkiLCJjbGVhckNsYXNzZXMiLCJnZXRUYWdOYW1lIiwidGFnTmFtZSIsImdldFN0eWxlIiwic3R5bGUiLCJzZXRTdHlsZSJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBWTs7Ozs7QUFFb0UsR0FBYyxDQUFkLFVBQWM7Ozs7O1NBRXJGQSxZQUFZLENBQUNDLElBQUksRUFBRUMsS0FBSyxFQUFFLENBQUM7SUFDbEMsRUFBRSxFQUFFRCxJQUFJLEtBSHNFLFVBQWMsYUFHbkUsQ0FBQztRQUN4QkEsSUFBSSxHQUp3RSxVQUFjO0lBSzVGLENBQUM7SUFFRCxFQUFFLEVBQUVBLElBQUksS0FQc0UsVUFBYyxXQU9yRSxDQUFDO1FBQ3RCQSxJQUFJLEdBUndFLFVBQWM7SUFTNUYsQ0FBQztJQUVELEVBQUUsVUFBU0MsS0FBSyxpQ0FBWixPQUFZLENBQUxBLEtBQUssT0FYOEQsVUFBYyxTQVcvRCxDQUFDOztRQUM1QixHQUFLLENBQUNDLElBQUksR0FBR0MsTUFBTSxDQUFDRCxJQUFJLENBQUNELEtBQUs7UUFFOUJDLElBQUksQ0FBQ0UsT0FBTyxDQUFDLFFBQVEsQ0FBUEMsR0FBRyxFQUFLLENBQUM7a0JBQ2hCQyxVQUFVLENBQUNOLElBQUksRUFBRUssR0FBRyxJQUFJSixLQUFLLENBQUNJLEdBQUc7UUFDeEMsQ0FBQztJQUNILENBQUMsTUFBTSxFQUFFLFVBQVNKLEtBQUssaUNBQVosT0FBWSxDQUFMQSxLQUFLLE9BakJ1RCxVQUFjLFVBaUJ2RCxDQUFDO1FBQ3BDLEVBQUUsRUFBRUEsS0FBSyxFQUFFLENBQUM7WUFDVkEsS0FBSyxHQUFHRCxJQUFJLENBQUUsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO1lBRWpCLElBQUksQ0FBQ00sVUFBVSxDQUFDUCxZQUFZLENBQUNDLElBQUksRUFBRUMsS0FBSztRQUMxQyxDQUFDO0lBQ0gsQ0FBQyxNQUFNLENBQUM7UUFDTixJQUFJLENBQUNLLFVBQVUsQ0FBQ1AsWUFBWSxDQUFDQyxJQUFJLEVBQUVDLEtBQUs7SUFDMUMsQ0FBQztBQUNILENBQUM7U0FFUU0sWUFBWSxDQUFDUCxJQUFJLEVBQUUsQ0FBQztJQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUNNLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDUCxJQUFJO0FBQUcsQ0FBQztTQUVqRVEsY0FBYyxDQUFDUixJQUFJLEVBQUUsQ0FBQztJQUFDLElBQUksQ0FBQ00sVUFBVSxDQUFDRyxlQUFlLENBQUNULElBQUk7QUFBRyxDQUFDO1NBRS9EVSxZQUFZLENBQUNWLElBQUksRUFBRUMsS0FBSyxFQUFFLENBQUM7SUFBQyxJQUFJLENBQUNGLFlBQVksQ0FBQ0MsSUFBSSxFQUFFQyxLQUFLO0FBQUcsQ0FBQztTQUU3RFEsZUFBZSxDQUFDVCxJQUFJLEVBQUUsQ0FBQztJQUFDLElBQUksQ0FBQ00sVUFBVSxDQUFDRyxlQUFlLENBQUNULElBQUk7QUFBRyxDQUFDO1NBRWhFVyxZQUFZLENBQUNYLElBQUksRUFBRSxDQUFDO0lBQUMsTUFBTSxDQUFDLElBQUksQ0FBQ00sVUFBVSxDQUFDSyxZQUFZLENBQUNYLElBQUk7QUFBRyxDQUFDO1NBRWpFWSxRQUFRLENBQUNDLFNBQVMsRUFBRSxDQUFDO0lBQUMsSUFBSSxDQUFDUCxVQUFVLENBQUNPLFNBQVMsR0FBR0EsU0FBUztBQUFFLENBQUM7U0FFOURDLFFBQVEsQ0FBQ0QsU0FBUyxFQUFFLENBQUM7SUFBQyxJQUFJLENBQUNQLFVBQVUsQ0FBQ1MsU0FBUyxDQUFDQyxHQUFHLENBQUNILFNBQVM7QUFBRyxDQUFDO1NBRWpFSSxXQUFXLENBQUNKLFNBQVMsRUFBRSxDQUFDO0lBQUMsSUFBSSxDQUFDUCxVQUFVLENBQUNTLFNBQVMsQ0FBQ0csTUFBTSxDQUFDTCxTQUFTO0FBQUcsQ0FBQztTQUV2RU0sV0FBVyxDQUFDTixTQUFTLEVBQUUsQ0FBQztJQUFDLElBQUksQ0FBQ1AsVUFBVSxDQUFDUyxTQUFTLENBQUNLLE1BQU0sQ0FBQ1AsU0FBUztBQUFHLENBQUM7U0FFdkVRLFFBQVEsQ0FBQ1IsU0FBUyxFQUFFLENBQUM7SUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDUCxVQUFVLENBQUNTLFNBQVMsQ0FBQ08sUUFBUSxDQUFDVCxTQUFTO0FBQUcsQ0FBQztTQUU3RVUsVUFBVSxDQUFDQyxVQUFVLEVBQUUsQ0FBQzs7SUFBQyxNQUFNLENBQUNBLFVBQVUsQ0FBQ0MsS0FBSyxDQUFDLFFBQVEsQ0FBUFosU0FBUztRQUFLLE1BQU0sT0FBRFEsUUFBUSxDQUFDUixTQUFTOztBQUFJLENBQUM7U0FFNUZhLFlBQVksR0FBRyxDQUFDO0lBQUMsSUFBSSxDQUFDcEIsVUFBVSxDQUFDTyxTQUFTLEdBbEQ2QixVQUFjO0FBa0QxQixDQUFDO1NBRTVEYyxVQUFVLEdBQUcsQ0FBQztJQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUNyQixVQUFVLENBQUNzQixPQUFPO0FBQUUsQ0FBQztTQUVoREMsUUFBUSxDQUFDN0IsSUFBSSxFQUFFLENBQUM7SUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDTSxVQUFVLENBQUN3QixLQUFLLENBQUM5QixJQUFJO0FBQUcsQ0FBQztTQUV0RCtCLFFBQVEsQ0FBQy9CLElBQUksRUFBRUMsS0FBSyxFQUFFLENBQUM7SUFBQyxJQUFJLENBQUNLLFVBQVUsQ0FBQ3dCLEtBQUssQ0FBQzlCLElBQUksSUFBSUMsS0FBSztBQUFFLENBQUM7ZUFFeEQsQ0FBQztJQUNkRixZQUFZLEVBQVpBLFlBQVk7SUFDWlEsWUFBWSxFQUFaQSxZQUFZO0lBQ1pDLGNBQWMsRUFBZEEsY0FBYztJQUNkRSxZQUFZLEVBQVpBLFlBQVk7SUFDWkQsZUFBZSxFQUFmQSxlQUFlO0lBQ2ZFLFlBQVksRUFBWkEsWUFBWTtJQUNaQyxRQUFRLEVBQVJBLFFBQVE7SUFDUkUsUUFBUSxFQUFSQSxRQUFRO0lBQ1JHLFdBQVcsRUFBWEEsV0FBVztJQUNYRSxXQUFXLEVBQVhBLFdBQVc7SUFDWEUsUUFBUSxFQUFSQSxRQUFRO0lBQ1JFLFVBQVUsRUFBVkEsVUFBVTtJQUNWRyxZQUFZLEVBQVpBLFlBQVk7SUFDWkMsVUFBVSxFQUFWQSxVQUFVO0lBQ1ZFLFFBQVEsRUFBUkEsUUFBUTtJQUNSRSxRQUFRLEVBQVJBLFFBQVE7QUFDVixDQUFDIn0=